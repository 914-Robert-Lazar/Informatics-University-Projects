     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 A98B                        a dw 1000101110101001b
    15 00000002 C4EE                        b dw 1110111011000100b
    16 00000004 00000000                    c dd 0
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21 00000000 B800000000                      mov eax, 0
    22                                          
    23 00000005 BB00000000                      mov ebx, 0
    24 0000000A 668B1D[00000000]                mov bx, [a]
    25 00000011 6681E3F801                      and bx, 0000000111111000b
    26 00000016 C1CB03                          ror ebx, 3
    27 00000019 09D8                            or eax, ebx
    28                                          
    29 0000001B BB00000000                      mov ebx, 0
    30 00000020 668B1D[02000000]                mov bx, [b]
    31 00000027 6683E31C                        and bx, 0000000000011100b
    32 0000002B C1C304                          rol ebx, 4
    33 0000002E 09D8                            or eax, ebx
    34                                          
    35 00000030 BB00000000                      mov ebx, 0
    36 00000035 668B1D[00000000]                mov bx, [a]
    37 0000003C 6681E3C01F                      and bx, 0001111111000000b
    38 00000041 C1C303                          rol ebx, 3
    39 00000044 09D8                            or eax, ebx
    40                                          
    41 00000046 A3[04000000]                    mov [c], eax
    42                                          ; exit(0)
    43 0000004B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000004D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
