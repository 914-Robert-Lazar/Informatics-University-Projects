     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  
    13                                  ;Two byte strings s1 and s2 are given. Build the byte string d such that, for every byte s2[i] in s2, d[i] contains either the position of byte s2[i] in s1, either the value of 0
    14                                  
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 072137132E                  s1 db 7, 33, 55, 19, 46
    18                                      lenS1 equ $ - s1
    19 00000005 2E15070D1B13370121          s2 db 46, 21, 7, 13, 27, 19, 55, 1, 33
    20                                      lenS2 equ $ - s2
    21 0000000E 00<rept>                    d times lenS2 db 0
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 B909000000                      mov ecx, lenS2
    27 00000005 BE00000000                      mov esi, 0
    28                                          forInS2:
    29 0000000A BF[00000000]                        mov edi, s1
    30 0000000F 8A86[05000000]                      mov al, [s2 + esi]
    31                                              
    32 00000015 89CB                                mov ebx, ecx
    33 00000017 B905000000                          mov ecx, lenS1
    34 0000001C F2AE                                repnz scasb
    35 0000001E 89D9                                mov ecx, ebx
    36                                              
    37 00000020 81EF[00000000]                      sub edi, s1
    38 00000026 83FF05                              cmp edi, lenS1
    39 00000029 7513                                jne notAtLast
    40 0000002B 4F                                      dec edi
    41 0000002C 3A87[00000000]                          cmp al, [s1 + edi]
    42 00000032 7509                                    jne notTheLast
    43 00000034 C686[0E000000]05                            mov [d + esi], byte lenS1
    44 0000003B EB16                                        jmp theLast
    45                                                  notTheLast:
    46 0000003D 47                                      inc edi
    47                                              notAtLast:
    48 0000003E 89F8                                mov eax, edi
    49                                              
    50 00000040 3C05                                cmp al, lenS1
    51 00000042 7209                                jb found
    52 00000044 C686[0E000000]00                        mov [d + esi], byte 0
    53 0000004B EB06                                    jmp notFound
    54                                              found:
    55                                              
    56 0000004D 8886[0E000000]                          mov [d + esi], al
    57                                              notFound:
    58                                              theLast:
    59 00000053 46                                  inc esi
    60 00000054 E2B4                            loop forInS2
    61                                          ; exit(0)
    62 00000056 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    63 00000058 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
