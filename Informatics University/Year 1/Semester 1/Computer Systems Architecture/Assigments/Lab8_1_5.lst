     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf       ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 2C2234A4                    a dd 0A434222Ch
    16 00000004 10000000                    b dd 10h
    17 00000008 51756F7469656E7420-         format db "Quotient = %d, remainder = %d"
    17 00000011 3D2025642C2072656D-
    17 0000001A 61696E646572203D20-
    17 00000023 2564               
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 A1[00000000]                    mov eax, [a]
    23 00000005 BA00000000                      mov edx, 0
    24 0000000A F735[04000000]                  div dword [b]
    25 00000010 52                              push dword edx
    26 00000011 50                              push dword eax
    27 00000012 68[08000000]                    push dword format
    28 00000017 FF15[00000000]                  call [printf]
    29 0000001D 83C40C                          add esp, 4 * 3
    30                                          ; exit(0)
    31 00000020 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000022 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
