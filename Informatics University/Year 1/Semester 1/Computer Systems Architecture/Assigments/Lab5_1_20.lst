     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02010303040206              A db 2, 1, 3, 3, 4, 2, 6
    15                                      lenA equ $ - A
    16 00000007 040507060201                B db 4, 5, 7, 6, 2, 1
    17                                      lenB equ $ - B
    18 0000000D 00                          R db 0
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B906000000                      mov ecx, lenB
    24 00000005 BE00000000                      mov esi, 0
    25 0000000A BF06000000                      mov edi, lenB
    26 0000000F 4F                              dec edi
    27 00000010 E310                            jecxz endFor
    28                                          forIndex:
    29 00000012 8A87[07000000]                      mov al, [B + edi]
    30 00000018 4F                                  dec edi
    31 00000019 8886[0D000000]                      mov [R + esi], al
    32 0000001F 46                                  inc esi
    33 00000020 E2F0                            loop forIndex
    34                                          endFor:
    35 00000022 B907000000                      mov ecx, lenA
    36 00000027 BF00000000                      mov edi, 0
    37 0000002C E314                            jecxz endFor2
    38                                          forIndex2:
    39 0000002E 8A87[00000000]                      mov al, [A + edi]
    40 00000034 A801                                test al, 1
    41 00000036 7B07                                jnp skip
    42 00000038 8886[0D000000]                          mov [R + esi], al
    43 0000003E 46                                      inc esi
    44                                              skip:
    45 0000003F 47                                  inc edi
    46 00000040 E2EC                            loop forIndex2
    47                                          endFor2:
    48                                          ; exit(0)
    49 00000042 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 00000044 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
