     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 657865726369736532-         file_name db "exercise20.txt", 0
    17 00000009 302E74787400       
    18 0000000F 7700                        acces_mode db "w", 0
    19                                      
    20 00000011 FFFFFFFF                    file_descriptor dd -1
    21 00000015 303132333435363738-         TabDigit db "0123456789ABCDEF"
    21 0000001E 39414243444546     
    22 00000025 6173206420207600            text db "as d  v", 0
    23                                      len equ $ - text
    24                                      
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; ...
    29 00000000 B908000000                      mov ecx, len
    30 00000005 BF[25000000]                    mov edi, text
    31 0000000A BB[15000000]                    mov ebx, TabDigit
    32                                          
    33 0000000F E34F                            jecxz stop
    34                                          forText:
    35 00000011 47                                  inc edi
    36 00000012 89F8                                mov eax, edi
    37 00000014 2D[25000000]                        sub eax, text
    38 00000019 FEC0                                inc al
    39 0000001B D7                                  xlat
    40                                              
    41 0000001C AA                                  stosb
    42 0000001D 49                                  dec ecx
    43 0000001E E2F1                            loop forText
    44                                          
    45 00000020 68[0F000000]                    push dword acces_mode
    46 00000025 68[00000000]                    push dword file_name
    47 0000002A FF15[00000000]                  call [fopen]
    48 00000030 83C408                          add esp, 4 * 2
    49                                          
    50 00000033 83F800                          cmp eax, 0
    51 00000036 7428                            je stop2
    52                                          
    53 00000038 A3[11000000]                    mov [file_descriptor], eax
    54                                          
    55 0000003D 68[25000000]                    push dword text
    56 00000042 FF35[11000000]                  push dword [file_descriptor]
    57 00000048 FF15[00000000]                  call [fprintf]
    58 0000004E 83C408                          add esp, 4 * 2
    59                                          
    60 00000051 FF35[11000000]                  push dword [file_descriptor]
    61 00000057 FF15[00000000]                  call [fclose]
    62 0000005D 83C404                          add esp, 4
    63                                          stop:
    64                                          stop2:
    65                                          ; exit(0)
    66 00000060 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    67 00000062 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
