     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 9B                          a db 10011011b
    15 00000001 4E                          b db 01001110b
    16 00000002 00000000                    c dd 0
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21 00000000 B800000000                      mov eax, 0
    22 00000005 0D0000FFFF                      or eax, 0ffff0000h
    23                                          
    24 0000000A BB00000000                      mov ebx, 0
    25 0000000F 8A1D[01000000]                  mov bl, [b]
    26 00000015 80E378                          and bl, 01111000b
    27 00000018 C0CB03                          ror bl, 3
    28 0000001B 09D8                            or eax, ebx
    29                                          
    30 0000001D 250FFFFFFF                      and eax, 0ffffff0fh
    31                                          
    32 00000022 0D00060000                      or eax, 00000000000000000000011000000000b
    33                                          
    34 00000027 BB00000000                      mov ebx, 0
    35 0000002C 8A1D[00000000]                  mov bl, [a]
    36 00000032 80E31F                          and bl, 00011111b
    37 00000035 C1C30B                          rol ebx, 11
    38 00000038 09D8                            or eax, ebx
    39                                          
    40 0000003A A3[02000000]                    mov [c], eax
    41                                          ; exit(0)
    42 0000003F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 00000041 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
