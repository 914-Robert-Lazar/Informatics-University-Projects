ExecutionStack:
Ref(int) v
(new(v, 20); (Ref(Ref(int)) a; (new(a, v); (new(v, 30); Print(ReadHeap(ReadHeap(a)))))))
SymbolTable:
OutputList:
FileTable:
Heap:

ExecutionStack:
(new(v, 20); (Ref(Ref(int)) a; (new(a, v); (new(v, 30); Print(ReadHeap(ReadHeap(a)))))))
SymbolTable:
v --> (0, int)
OutputList:
FileTable:
Heap:

ExecutionStack:
new(v, 20)
(Ref(Ref(int)) a; (new(a, v); (new(v, 30); Print(ReadHeap(ReadHeap(a))))))
SymbolTable:
v --> (0, int)
OutputList:
FileTable:
Heap:

ExecutionStack:
(Ref(Ref(int)) a; (new(a, v); (new(v, 30); Print(ReadHeap(ReadHeap(a))))))
SymbolTable:
v --> (1, int)
OutputList:
FileTable:
Heap:
1: 20

ExecutionStack:
Ref(Ref(int)) a
(new(a, v); (new(v, 30); Print(ReadHeap(ReadHeap(a)))))
SymbolTable:
v --> (1, int)
OutputList:
FileTable:
Heap:
1: 20

ExecutionStack:
(new(a, v); (new(v, 30); Print(ReadHeap(ReadHeap(a)))))
SymbolTable:
a --> (0, Ref(int))
v --> (1, int)
OutputList:
FileTable:
Heap:
1: 20

ExecutionStack:
new(a, v)
(new(v, 30); Print(ReadHeap(ReadHeap(a))))
SymbolTable:
a --> (0, Ref(int))
v --> (1, int)
OutputList:
FileTable:
Heap:
1: 20

ExecutionStack:
(new(v, 30); Print(ReadHeap(ReadHeap(a))))
SymbolTable:
a --> (2, Ref(int))
v --> (1, int)
OutputList:
FileTable:
Heap:
1: 20
2: (1, int)

ExecutionStack:
new(v, 30)
Print(ReadHeap(ReadHeap(a)))
SymbolTable:
a --> (2, Ref(int))
v --> (1, int)
OutputList:
FileTable:
Heap:
1: 20
2: (1, int)

ExecutionStack:
Print(ReadHeap(ReadHeap(a)))
SymbolTable:
a --> (2, Ref(int))
v --> (3, int)
OutputList:
FileTable:
Heap:
1: 20
2: (1, int)
3: 30

ExecutionStack:
SymbolTable:
a --> (2, Ref(int))
v --> (3, int)
OutputList:
20
FileTable:
Heap:
1: 20
2: (1, int)
3: 30

